{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"f3c6903b-b6ad-5230-bf3d-ea1fef75553b","excerpt":"1. CKA Core Conecpt Kubernetes 구조  제가 Udemy에서 보고있는 CKA 강좌 Certified Kubernetes Administrator (CKA) with Practice Tests 에서는 Master Node와 Worker Node에 및 Kubernetes에 대한 전반적인 구조를 선박과 연관지어 설명하였습니다. 실질적으로 컨테이너를 운반하는 Cargo Ship을 Worker Node로 연관지어 설명하였고 Cargo Ship을 모니터링 하고 관리하는대한 책임을 지는 Control Ship을 Master Node(Control Plane)에 연관지어 설명하였습니다. 사전적으로 설명하자면 Master Node(Control Plane) : 워커 노드와 클러스터 내 파드를 관리합니다. Worker Node: 각기 다른 목적, 기능으로 세분화된 컨테이너들이 실제 배치되는 노드(Application을 서비스하는 Node) 입니다.  위의 그림이 Kubernet…","frontmatter":{"categories":"Certification","title":"CKA Study 1","date":"September 04, 2022"},"fields":{"slug":"/Certification/CKA/1/"}}},{"node":{"id":"bdf14ca3-10e2-5a47-9931-bf68222b70fa","excerpt":"1. Spring Boot 동작 방식 스프링 부트에서 Spring-boot-starter-web 모듈을 사용하면 기본적으로 Tomcat을 사용하는 스프링 MVC 구조를 기반으로 동작합니다.  서블릿 : 클라이언트의 요청을 처리하고 결과를 반환하는 자바 웹 프로그래밍 기술 서블릿 컨테이너 : HTTP 요청을 받아 웹페이지를 동적으로 생성하는 역할을 합니다.\r\n서블릿 인스턴스를 생성하고 관리하는 역할을 수행하는 주체,\r\nEx) Tomcat 서블릿 컨테이너의 특징 서블릿 객체를생성, 초기화, 호출, 종료하는 생명주기 관리 서블릿 객체는 싱글톤 패턴으로 관리 멀티 스레딩 지원 스프링에서는 DispatcherServlet이 서블릿의 역할을 수행합니다. 서블릿 컨테이너와 DispatcherServlet은 자동 설정된 web.xml의 설정값을 공유합니다. 동작 원리 DispatcherServlet으로 요청(HttpServletRequest)이 들어오면 DispatcherServlet은 핸들러 …","frontmatter":{"categories":"Develop","title":"JAVA Spring Study 2","date":"September 01, 2022"},"fields":{"slug":"/JAVA/Spring2/"}}},{"node":{"id":"1fb5e8d0-d94f-544d-ae1b-f83ff6323242","excerpt":"가시다님 스터디 : https://www.notion.so/gasidaseo/23-7635cc4f02c04954a3260b317588113e 가시다님의 쿠버네티스 스터디 2주차 쿠버네티스 네트워크 입니다.\r\n이번주차는 저를 포함한 이번 스터디를 수행하는 모든 문들이 어려움을 많이 느꼈던것으로 알고 있습니다.\r\n저역시 쉽지 않아서 원래대로 라면 지난주에 포스팅해야했을것을 과제만 우선 제출하고 현재 포스팅을 하고 있습니다.ㅜㅜ 1. KOPS 원클릭 배포 지난번 1주차에서 스터디장님인 가시다님이 제공해주신 CloudFormation을 통해 EC2등을 배포하고\r\n거기서 aws configure 등의 작업을 진행해 주었습니다.\r\n하지만 가시다님의 노력으로 인하여 저희는 몇줄의 명령어 만으로 쉽게 배포할 수 있게 되었습니다. kops 원클릭 배포 원클릭 배포를 위해서는 먼저 SSH 키페어, IAM 계정 키, S3 버킷이 필요합니다. 위에서 말씀드린 것들은 1주차에서 생성하였으므로 이번 포스팅…","frontmatter":{"categories":"Kubernetes","title":"Gasida Kubernetes Study 2주차","date":"August 29, 2022"},"fields":{"slug":"/Kubernetes/Gasida_Study_homework_2/"}}},{"node":{"id":"de8ec65d-6c14-548f-88a7-d69284a7c409","excerpt":"가시다님 스터디 : https://www.notion.so/gasidaseo/23-7635cc4f02c04954a3260b317588113e 1. KOPS란?? ubernetes eration KOPS 란 쉽게 설명하자면 쿠버네티스의 생성 및 관리를 쉽게 하도록 도와주는 오픈소스 툴 입니다.\r\n쿠버네티스 클러스터를 간단한 CLI 명령을 통하여 생성,관리, 업그레이드 등의 작업을 할수 있도록 지원해줍니다.  KOPS 공식 사이트 공식사이트에서 보면 현재 AWS와 GCP가 공식지원되며 Azure는 알파 지원이 가능하다고 명시되어 있는데\r\nAzure도 빨리 공식 지원이 됬으면 좋겠습니다.. 2. 실습환경 구성을 위한 사전 준비 사항 AWS Free Tier 계정 IAM User AWS Route53 퍼블릭 호스팅 영역  먼저 위의 화면과 같이 AdministratorAccess 정책이 부여된 별도의 계정을 생성해주도록 합니다.  계정을 생성하면 위의 화면과 같이 Access Key ID…","frontmatter":{"categories":"Kubernetes","title":"Gasida Kubernetes Study 1주차","date":"August 29, 2022"},"fields":{"slug":"/Kubernetes/Gasida_Study_homework_1/"}}},{"node":{"id":"94fc2da6-5859-5681-994b-46b2d79e6c0f","excerpt":"가시다님 스터디 : https://www.notion.so/gasidaseo/23-7635cc4f02c04954a3260b317588113e 1.스토리지  아래 명령어를 통해 인스토어 스토어 볼륨이 있는 c5모든 타입의 스토리지 크기를 조회하실 수 있습니다.\r\n 저희가 배포한 c5d.large는 50Gib 만큼의 크기를 제공하고 있습니다. 먼저 각 워커노드의 스토리지를 확인해 보도록 하겠습니다.\r\n\r\n\r\n\r\n nvm list를 통해서 보면 2개의 스토리지를 확인하실 수 있습니다.  하지만 AWS Management Console를 통해서 보면 EC2에 할당된 디스크중에 50Gib짜리 디스크는 찾아보실 수 없습니다.  인스턴스 스토어에 대한 정보는 스토리지 정보에 출력이 되지 않는다는 점을 확인하실 수 있습니다. 아래의 명령어를 통해 파일시스템 생성 및 /data를 마운트 시킬 수 있습니다.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n 2.Ingress 지난주에 진행했던 실습과 비슷한 실습입니다.\r…","frontmatter":{"categories":"Kubernetes","title":"Gasida Kubernetes Study 3주차","date":"August 29, 2022"},"fields":{"slug":"/Kubernetes/Gasida_Study_homework_3/"}}},{"node":{"id":"ed35f9d8-70fe-51e8-afc7-f9473e92474b","excerpt":"1. Spring의 특징 제어 역전(IoC) 제어 역전(Inversion of Control) 을 특징으로 하는 스프링은 기존 자바 개발 방식과 다르게 작동합니다.\r\nIoC를 적용한 환경에서는 사용할 객체를 직접 생성하지 않고 객체의 생명주기 관리를 외부에 위임합니다.\r\n외부는 스프링 컨테이너, IoC 컨테이너를 의미합니다. 객체의 관리를 외부에 맡겨 제어권이 넘어간 것을 제어 역전이라고 하며, 제어 역전을 통해 의존성 주입(Dependency injection),\r\n관점 지향 프로그래밍(Aspect_Oriented Programming) 등이 가능해집니다. 의존성 주입(DI) 의존성 주입(Dependency Injection)이란 제어 역전의 방법 중 하나로, 사용할 객체를 직접 생성하지 않고 외부 컨테이너가 생성한 객체를 주입받아\r\n사용하는 방식을 의미합니다. 의존성 주입방법 2-1.  생성자를 통한 의존성 주입 2-2.  필드 객체 선언을 통한 의존성 주입 2-3.  sett…","frontmatter":{"categories":"Develop","title":"JAVA Spring Study 1","date":"August 29, 2022"},"fields":{"slug":"/JAVA/Spring1/"}}},{"node":{"id":"5cd4b259-eef7-5b8e-bc0d-22869467545e","excerpt":"👋 Azure Devops 지난번에 AKS 및 ACR 생성에 이어서 DevOps에서 Pipeline 구축을 진행해보도록 하겠습니다. 🚀 시작하기 https://devops.azure.com/ 에 접속하셔서 로그인을 하시면  과 같은 프로젝트 생성 화면을 보실 수 있습니다.\r\n프로젝트의 이름 및 공개 여부를 설정해주시고 DevOps 프로젝트를 생성하도록 하겠습니다. Azure Devops Git  Azure Devops 왼쪽에 Repos라는 메뉴가 있습니다.\r\n이 메뉴는 Azure Devops에서 제공하는 Git Repository 입니다.\r\n이는 표준 Git을 채택하여 사용하기에 기존 사용하시던 GitHub와 동일하게 사용하실 수 있습니다.\r\n여기서 저는 Azure에서 기본적으로 제공해주는 Python Flask 샘플앱\r\n(https://github.com/Azure-Samples/msdocs-python-flask-webapp-quickstart.git) 을 Import 해보도록…","frontmatter":{"categories":"Devops","title":"Azure Devops PipeLine 구축 1","date":"August 28, 2022"},"fields":{"slug":"/DevOps/AKS&DevOps2/"}}},{"node":{"id":"620d7676-a502-56cb-8aa7-582cd297be3b","excerpt":"👋 1. AKS 소개 AKS(AzureK Kubernetes Service)는 Azure 에서 제공하는 컨테이너 기반 인프라 운영 서비스입니다. Master 서버를 Azure 에서 관리해 주기에\r\n인프라 관리 부담은 줄어들고 Azure 리소스와의 뛰어난 호환성을 가지고 있습니다. 또한 Azure CNI(Container Network Interface) 를 활용하여\r\nAKS에서 생성된 Pod와 Azure VNet 상의 리소스를 직접 통신시킬 수 있습니다.  🙌 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Azure Portal에 로그인하여 상단의 검색바에서 Kubernetes & AKS 를 검색합니다.  상단 +만들기 에서 Kubernetes 클러스트 만들기 를 클릭합니다.  AKS 생성 상세 메뉴 입니다. 먼저 AKS를 배포할 리소스 그룹을 생성해줍니다. 리소…","frontmatter":{"categories":"Devops","title":"Azure Kubernetes Service 생성 & Test","date":"August 28, 2022"},"fields":{"slug":"/DevOps/AKS&DevOps1/"}}},{"node":{"id":"724c4a7c-a5f4-51b7-9afc-4ab21363de80","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기(컨텐츠 테스트)","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"cc9cddfc-6b90-58b5-a3ba-cfa0ff845c10","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"장우석","bio":{"role":"데브옵스엔지니어","description":["사람에 가치를 두는","능동적으로 일하는","이로운 것을 만드는"],"thumbnail":"sample.png"},"social":{"github":"","linkedIn":"","email":""}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}